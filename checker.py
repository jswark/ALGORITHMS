n = 1000 #cities
anscheck len
if len(ans.split()) == n:
    print("ok1")
else:
    print("neOk1")

#check cicle
answ = ans.split()

#if answ[0] == answ[n]:
 #   print("ok2")
#else:
  #  print("neOk2")

#check all num in answ
for i in range(1, n+1):
    if str(i) in answ:
        continue
    else:
        print("neOk3", i)
print("ok3")
